import { type Modifier } from "../types.js";
import { type Key } from "../types.js";

export const ModMap: Record<string, Modifier> = {
    C: "ctrl",
    A: "alt",
    D: "super",
    M: "meta",
    H: "hyper",
} as const;

export const KeyAliases: Record<string, Key> = {
    CR: "return",
    BS: "backspace",
    DEL: "delete",
};

export const KeySet: Set<Key> = new Set([
    "ctrl",
    "alt",
    "shift",
    "super",
    "hyper",
    "meta",
    "capsLock",
    "numLock",
    "backspace",
    "delete",
    "esc",
    "insert",
    "return",
    "tab",
    "up",
    "down",
    "left",
    "right",
    "f1",
    "f2",
    "f3",
    "f4",
    "f5",
    "f6",
    "f7",
    "f8",
    "f9",
    "f10",
    "f11",
    "f12",
    "f13",
    "f14",
    "f15",
    "f16",
    "f17",
    "f18",
    "f19",
    "f20",
    "f21",
    "f22",
    "f23",
    "f24",
    "f25",
    "f26",
    "f27",
    "f28",
    "f29",
    "f30",
    "f31",
    "f32",
    "f33",
    "f34",
    "f35",
    "pageUp",
    "pageDown",
    "home",
    "end",
    "scrollLock",
    "printScreen",
    "begin",
    "pause",
    "menu",
    "mediaPlay",
    "mediaPause",
    "mediaPlayPause",
    "mediaReverse",
    "mediaStop",
    "mediaFastForward",
    "mediaRewind",
    "mediaTrackNext",
    "mediaTrackPrevious",
    "mediaRecord",
    "mediaLowerVolume",
    "mediaRaiseVolume",
    "mediaMuteVolume",
]);
